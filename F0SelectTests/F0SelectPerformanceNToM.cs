using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Engines;
using Microsoft.EntityFrameworkCore;
using ORM0Entities;
using ORM0Entities.autogenerated;

namespace F0SelectTests;

[SimpleJob(RunStrategy.Throughput)]
[JsonExporter(fileNameSuffix:"",indentJson:true)]
[RPlotExporter]
[CsvMeasurementsExporter]
[IterationCount(20)]
[WarmupCount(20)]

public class F0SelectPerformanceNToM : F0GlobalConfig.F0GlobalConfig
{
    public IEnumerable<int> valuesForNumberOfStatements() => NumberOfBills;
    
    [ParamsSource(nameof(valuesForNumberOfStatements))] 
    public int numberOfStatements;

    [GlobalSetup]
    public void GlobalSetup()
    {
        DefineDatabaseModelUsingScript(FilePath);
    }
    private List<Article> articleList = new List<Article>();
    private int cache = -1;
    [IterationSetup]
    public void SetUp()
    {
        if (cache != numberOfStatements)
        {
            SetUpGenericF0();
            listInsertBills = NBuilderHelper.GetBillsAndArticles(numberOfStatements,NumberOfArticles,MinArticlesToTryAdd,MaxArticlesToTryAdd,articleList);
            cache = numberOfStatements;
        }
        else
        {
            var tempList = listInsertBills;
            SetUpGenericF0();
            listInsertBills = tempList;
        }
        
        context.AddRange(articleList);
        context.AddRange(listInsertBills);
        context.SaveChanges();
        ResetCache();
    }
    [IterationCleanup]
    public void CleanUp()
    {
        CleanBillsArticles();
    }

  
    [Benchmark]
    public void SelectData()
    {
        for (int i = 0; i < listInsertBills.Count; i++)
        {
            listGetBills.Add(context.Bills.Include(c => c.FkArticles).Include(c => c.FkArticles).First(c => c.Billsid == listInsertBills[i].Billsid));
        }
    }
}