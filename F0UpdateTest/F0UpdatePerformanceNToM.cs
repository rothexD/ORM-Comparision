using BenchmarkDotNet.Attributes;
using BenchmarkDotNet.Engines;
using Microsoft.EntityFrameworkCore;
using ORM0Entities;
using ORM0Entities.autogenerated;

namespace F0UpdateTest;

[SimpleJob(RunStrategy.Throughput)]
[JsonExporter(fileNameSuffix:"",indentJson:true)]
[RPlotExporter]
[CsvMeasurementsExporter]
[IterationCount(20)]
[WarmupCount(20)]

public class F0UpdatePerformanceNToM : F0GlobalConfig.F0GlobalConfig
{
    public IEnumerable<int> valuesForNumberOfStatements() => NumberOfBills;
    
    [ParamsSource(nameof(valuesForNumberOfStatements))] 
    public int numberOfStatements;

    [GlobalSetup]
    public void GlobalSetup()
    {
        DefineDatabaseModelUsingScript(FilePath);
    }
    private List<Article> articleList = new List<Article>();
    private int cache = -1;
    [IterationSetup]
    public void SetUp()
    {
        if (cache != numberOfStatements)
        {
            SetUpGenericF0();
            listInsertBills = NBuilderHelper.GetBillsAndArticles(numberOfStatements,NumberOfArticles,MinArticlesToTryAdd,MaxArticlesToTryAdd,articleList);
            cache = numberOfStatements;
        }
        else
        {
            var tempList = listInsertBills;
            SetUpGenericF0();
            listInsertBills = tempList;
            for (int i = 0; i < listInsertBills.Count; i++)
            {
                Bill temp = listInsertBills[i];
                temp.Purchaseprice = i + i-2;

                temp.FkArticles[1].Articlename = "bbbbbbbb";
                temp.FkArticles[1].Ishidden = !temp.FkArticles[1].Ishidden;
            }
        }
        
        context.AddRange(articleList);
        context.AddRange(listInsertBills);
        context.SaveChanges();
        ResetCache();
    }
    
    
    [IterationCleanup]
    public void CleanUp()
    {
       CleanBillsArticles();
    }

    [Benchmark]
    public void UpdateData()
    {
        context.AttachRange(listInsertBills);
        
        for (int i = 0; i < listInsertBills.Count; i++)
        {
            Bill temp = listInsertBills[i];
            temp.Purchaseprice = 1;

            temp.FkArticles[1].Articlename = "aaaaaaaaa";
            temp.FkArticles[1].Ishidden = !temp.FkArticles[1].Ishidden;

            context.Bills.Update(temp);
            context.SaveChanges();
        }
        
    }
}