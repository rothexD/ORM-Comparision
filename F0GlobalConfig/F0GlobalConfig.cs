using GlobalConfigBase;
using ORM0Entities.autogenerated;

namespace F0GlobalConfig;

public class F0GlobalConfig : GlobalConfig
{
    protected remote_databaseContext context;
    protected string FilePath = "C:\\Users\\lukas\\Documents\\Github\\ORMTestBachelorArbeit\\Data\\F0CreateAndDrop.sql";
    
    
    protected IList<Bill> listGetBills;
    protected IList<Book> listGetBooks;
    protected IList<Customer> listGetCustomers;
    
    protected IList<Bill> listInsertBills;
    protected IList<Book> listInsertBooks;
    protected IList<Customer> listInsertCustomers;

    protected IList<Knight> listInsertKnight;
    protected IList<Knight> listGetKnight;
    public void ResetCache()
    {
        context = new remote_databaseContext();
    }
    public void SetUpGenericF0()
    {
        listInsertKnight = new List<Knight>();
        listGetKnight = new List<Knight>();
        
        
        listInsertBills = new List<Bill>();
        listGetBills = new List<Bill>();
        
        listInsertCustomers = new List<Customer>();
        listGetCustomers = new List<Customer>();

        listInsertBooks = new List<Book>();
        listGetBooks = new List<Book>();

        context = new remote_databaseContext();
    }

    #region Entitycomparers

    public void CompareCustomer(Customer shouldBe, Customer actual)
    {
        if (shouldBe.Customerid != actual.Customerid) Console.WriteLine("ERROR, id missmatch");
        if (shouldBe.Lastname !=  actual.Lastname) Console.WriteLine($"ERROR, -{shouldBe.Lastname}-!=-{actual.Lastname}-");
        if (shouldBe.Isvip != actual.Isvip) Console.WriteLine("Error, Isvip missmatch");
        if (shouldBe.Customerlikescolorgreen != actual.Customerlikescolorgreen)
            Console.WriteLine("ERROR, Customerlikescolorgreen missmatch");
        if (shouldBe.Customerlikescars != actual.Customerlikescars)
            Console.WriteLine("ERROR, Customerlikescars missmatch");
        if (shouldBe.Totalarticlesaddedtoshoppingcart != actual.Totalarticlesaddedtoshoppingcart)
            Console.WriteLine("ERROR, Totalarticlesaddedtoshoppingcart missmatch");
        if (shouldBe.Defaultpurchasepricemultiplicator != actual.Defaultpurchasepricemultiplicator)
            Console.WriteLine("ERROR, Defaultpurchasepricemultiplicator missmatch");
    }

    public void CompareBills(Bill shouldBe, Bill actual)
    {
        if (shouldBe.Billsid != actual.Billsid) Console.WriteLine("ERROR, Billsid missmatch");
        if (shouldBe.Purchaseprice != actual.Purchaseprice) Console.WriteLine("ERROR, Price missmatch");
    }

    public void CompareArticles(Article shouldBe, Article actual)
    {
        if (shouldBe.Articlesid != actual.Articlesid) Console.WriteLine("ERROR, Articlesid missmatch");
        if (shouldBe.Articleprice != actual.Articleprice) Console.WriteLine("ERROR, Articleprice missmatch");
        if (shouldBe.Articlename != actual.Articlename) Console.WriteLine("ERROR, Articlename missmatch");
        if (shouldBe.Ishidden != actual.Ishidden) Console.WriteLine("ERROR, Ishidden missmatch");
    }

    public void CompareBook(Book shouldBe, Book actual)
    {
        if (shouldBe.Bookid != actual.Bookid) Console.WriteLine("ERROR, Bookid missmatch");
        if (shouldBe.Bookname != actual.Bookname) Console.WriteLine("ERROR, Bookname missmatch");
        if (shouldBe.Price != actual.Price) Console.WriteLine("ERROR, Price missmatch");
        if (shouldBe.Authorname != actual.Authorname) Console.WriteLine("ERROR, Authorname missmatch");
    }

    public void CompareChapter(Chapter shouldBe, Chapter actual)
    {
        if (shouldBe.Chapterid != actual.Chapterid) Console.WriteLine("ERROR, Chapterid missmatch");
        if (shouldBe.Chaptername != actual.Chaptername) Console.WriteLine("ERROR, Chaptername missmatch");
        if (shouldBe.FkBook.Bookid != actual.FkBook.Bookid) Console.WriteLine("ERROR, FkBook.Bookid missmatch");
    }

    public void ComparePages(Page shouldBe, Page actual)
    {
        if (shouldBe.Pagesid != actual.Pagesid) Console.WriteLine("ERROR, Pagesid missmatch");
        if (shouldBe.FkChapterId != actual.FkChapterId) Console.WriteLine("ERROR, FkChapterId missmatch");
        if (shouldBe.Text != actual.Text) Console.WriteLine("ERROR, Text missmatch");
        if (shouldBe.FkChapter.Chapterid != actual.FkChapter.Chapterid)
            Console.WriteLine("ERROR, FkChapter.Chapterid missmatch");
    }

    #endregion
}